{"version":3,"file":"static/js/168.a0bf5e73.chunk.js","mappings":"oOACA,EAAuB,sBAAvB,EAAwD,0B,SC6CxD,EAxCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,IACXI,EAAAA,EAAAA,IAAgBV,GACbW,MAAK,SAAAC,GACJ,OAAoB,IAAhBA,EAAKC,OACAC,QAAQC,OACb,IAAIC,MAAJ,mDAGGZ,EAAWQ,EAAKK,QACxB,IACAC,OAAM,SAAAX,GAAK,OAAIC,EAASD,EAAb,IACXY,SAAQ,kBAAMb,GAAW,EAAjB,GACZ,GAAE,CAACN,KAGF,2BACGO,IAAS,wBAAKA,EAAMa,UACpBf,IAAW,SAACgB,EAAA,EAAD,KACZ,eAAIC,UAAWC,EAAf,SACsB,IAAnBpB,EAAQU,OACL,0CACAV,EAAQqB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC9B,OACE,gBAAIL,UAAWC,EAAf,WACE,0BAAI,WAASE,MACb,uBAAIC,MAF4BC,EAKrC,QAIZ,C,uJC7CD,IAAMC,EAAW,+BACXC,EAAU,mCAEHC,EAAoB,WAC/B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,uCAA2CC,IAAWlB,MAChE,SAAAqB,GACE,OAAmB,MAAfA,EAAIC,OACCnB,QAAQC,OAAO,IAAIC,MAAJ,kCACVgB,EAAIE,MACnB,GAEJ,EAEYC,EAAmB,SAAAnC,GAC9B,OAAO+B,MAAM,GAAD,OAAIH,EAAJ,kBAAsB5B,EAAtB,oBAAyC6B,IAAWlB,MAAK,SAAAqB,GACnE,OAAmB,MAAfA,EAAIC,OACCnB,QAAQC,OAAO,IAAIC,MAAJ,kCACVgB,EAAIE,MACnB,GACF,EAEYE,EAAe,SAAApC,GAC1B,OAAO+B,MAAM,GAAD,OAAIH,EAAJ,kBAAsB5B,EAAtB,4BAAiD6B,IAAWlB,MACtE,SAAAqB,GACE,OAAmB,MAAfA,EAAIC,OACCnB,QAAQC,OAAO,IAAIC,MAAJ,kCACVgB,EAAIE,MACnB,GAEJ,EAEYxB,EAAkB,SAAAV,GAC7B,OAAO+B,MAAM,GAAD,OAAIH,EAAJ,kBAAsB5B,EAAtB,4BAAiD6B,IAAWlB,MACtE,SAAAqB,GACE,OAAmB,MAAfA,EAAIC,OACCnB,QAAQC,OAAO,IAAIC,MAAJ,kCACVgB,EAAIE,MACnB,GAEJ,EAEYG,EAAkB,SAAAC,GAC7B,OAAOP,MAAM,GAAD,OACPH,EADO,+BACwBU,EADxB,oBACyCT,IACnDlB,MAAK,SAAAqB,GACL,OAAmB,MAAfA,EAAIC,OACCnB,QAAQC,OAAO,IAAIC,MAAJ,kCACVgB,EAAIE,MACnB,GACF,C","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/getMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\",\"itemList\":\"Reviews_itemList__SmW54\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/getMovies';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    getMovieReviews(movieId)\n      .then(data => {\n        if (data.length === 0) {\n          return Promise.reject(\n            new Error(`Oops, something went wrong... Please try again`)\n          );\n        }\n        return setReviews(data.results);\n      })\n      .catch(error => setError(error))\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  return (\n    <div>\n      {error && <h1>{error.message}</h1>}\n      {loading && <Loader />}\n      <ul className={css.list}>\n        {reviews.length === 0\n          ? 'We don`t have any reviews for his movie'\n          : reviews.map(({ author, content, id }) => {\n              return (\n                <li className={css.itemList} key={id}>\n                  <h3>Author: {author}</h3>\n                  <p>{content}</p>\n                </li>\n              );\n            })}\n      </ul>\n    </div>\n  );\n};\nexport default Reviews;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f8a6c1c08257b05a7c4692b093cbf34e';\n\nexport const getTrendingMovies = () => {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`).then(\n    res => {\n      if (res.status !== 200) {\n        return Promise.reject(new Error(`Oops, something went wrong...`));\n      } else return res.json();\n    }\n  );\n};\n\nexport const getMovieDetailes = movieId => {\n  return fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`).then(res => {\n    if (res.status !== 200) {\n      return Promise.reject(new Error(`Oops, something went wrong...`));\n    } else return res.json();\n  });\n};\n\nexport const getMovieCast = movieId => {\n  return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`).then(\n    res => {\n      if (res.status !== 200) {\n        return Promise.reject(new Error(`Oops, something went wrong...`));\n      } else return res.json();\n    }\n  );\n};\n\nexport const getMovieReviews = movieId => {\n  return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`).then(\n    res => {\n      if (res.status !== 200) {\n        return Promise.reject(new Error(`Oops, something went wrong...`));\n      } else return res.json();\n    }\n  );\n};\n\nexport const getSearchMovies = query => {\n  return fetch(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n  ).then(res => {\n    if (res.status !== 200) {\n      return Promise.reject(new Error(`Oops, something went wrong...`));\n    } else return res.json();\n  });\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","loading","setLoading","error","setError","useEffect","getMovieReviews","then","data","length","Promise","reject","Error","results","catch","finally","message","Loader","className","css","map","author","content","id","BASE_URL","API_KEY","getTrendingMovies","fetch","res","status","json","getMovieDetailes","getMovieCast","getSearchMovies","query"],"sourceRoot":""}