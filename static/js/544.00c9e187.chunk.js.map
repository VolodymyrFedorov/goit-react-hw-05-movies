{"version":3,"file":"static/js/544.00c9e187.chunk.js","mappings":"sKACA,MAA4B,6B,SCCfA,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OAAO,gBAAKC,UAAWC,EAAhB,SAAgCF,GACxC,C,2ECHD,EAAuB,yBAAvB,EAAuD,yBAAvD,EAA2F,6B,SCE9EG,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIL,UAAWC,EAAf,SACGE,EAAOG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACpB,OACE,eAAaR,UAAWC,EAAxB,UACE,SAAC,KAAD,CACED,UAAWC,EACXQ,GAAE,kBAAaD,GACfE,MAAO,CAAEC,KAAMP,GAHjB,SAKGG,KANIC,EAUZ,KAGN,C,sDCtBD,MAAwB,qB,SCCXI,EAAQ,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SACtB,OAAO,eAAIC,UAAWC,EAAf,SAA2BF,GACnC,C,yGCkCD,UA/Ba,WACX,OAA8Bc,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACRL,GAAW,IACXM,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJ,OAA4B,IAAxBA,EAAKC,QAAQC,OACRC,QAAQC,OAAO,IAAIC,MAAJ,kCAEjBX,EAAeM,EAAKC,QAC5B,IACAK,OAAM,SAAAX,GAAK,OAAIC,EAASD,EAAb,IACXY,SAAQ,kBAAMf,GAAW,EAAjB,GACZ,GAAE,KAGD,2BACE,UAAC,IAAD,YACE,SAAC,IAAD,UAAO,mBAENG,IAAS,wBAAKA,EAAMa,UACpBjB,IAAW,SAAC,IAAD,KACX,SAAC,IAAD,CAAYX,OAAQa,QAI5B,C,uJCpCD,IAAMgB,EAAW,+BACXC,EAAU,mCAEHZ,EAAoB,WAC/B,OAAOa,MAAM,GAAD,OAAIF,EAAJ,uCAA2CC,IAAWX,MAChE,SAAAa,GACE,OAAmB,MAAfA,EAAIC,OACCV,QAAQC,OAAO,IAAIC,MAAJ,kCACVO,EAAIE,MACnB,GAEJ,EAEYC,EAAmB,SAAAC,GAC9B,OAAOL,MAAM,GAAD,OAAIF,EAAJ,kBAAsBO,EAAtB,oBAAyCN,IAAWX,MAAK,SAAAa,GACnE,OAAmB,MAAfA,EAAIC,OACCV,QAAQC,OAAO,IAAIC,MAAJ,kCACVO,EAAIE,MACnB,GACF,EAEYG,EAAe,SAAAD,GAC1B,OAAOL,MAAM,GAAD,OAAIF,EAAJ,kBAAsBO,EAAtB,4BAAiDN,IAAWX,MACtE,SAAAa,GACE,OAAmB,MAAfA,EAAIC,OACCV,QAAQC,OAAO,IAAIC,MAAJ,kCACVO,EAAIE,MACnB,GAEJ,EAEYI,EAAkB,SAAAF,GAC7B,OAAOL,MAAM,GAAD,OAAIF,EAAJ,kBAAsBO,EAAtB,4BAAiDN,IAAWX,MACtE,SAAAa,GACE,OAAmB,MAAfA,EAAIC,OACCV,QAAQC,OAAO,IAAIC,MAAJ,kCACVO,EAAIE,MACnB,GAEJ,EAEYK,EAAkB,SAAAC,GAC7B,OAAOT,MAAM,GAAD,OACPF,EADO,+BACwBW,EADxB,oBACyCV,IACnDX,MAAK,SAAAa,GACL,OAAmB,MAAfA,EAAIC,OACCV,QAAQC,OAAO,IAAIC,MAAJ,kCACVO,EAAIE,MACnB,GACF,C","sources":["webpack://react-homework-template/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/Title/Title.module.css?a947","components/Title/Title.jsx","pages/Home/Home.jsx","services/getMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import css from './Container.module.css';\n\nexport const Container = ({ children }) => {\n  return <div className={css.container}>{children}</div>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"item\":\"MoviesList_item__eePYv\",\"itemLink\":\"MoviesList_itemLink__6tK9W\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './MoviesList.module.css';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.list}>\n      {movies.map(({ title, id }) => {\n        return (\n          <li key={id} className={css.item}>\n            <Link\n              className={css.itemLink}\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              {title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Title_title__mrNq5\"};","import css from './Title.module.css';\n\nexport const Title = ({ children }) => {\n  return <h1 className={css.title}>{children}</h1>;\n};\n","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'services/getMovies';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Container } from 'components/Container/Container';\nimport { Title } from 'components/Title/Title';\n\nconst Home = () => {\n  const [loading, setLoading] = useState(false);\n  const [moviesTrand, setMoviesTrand] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    getTrendingMovies()\n      .then(data => {\n        if (data.results.length === 0) {\n          return Promise.reject(new Error(`Oops, something went wrong...`));\n        }\n        return setMoviesTrand(data.results);\n      })\n      .catch(error => setError(error))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <main>\n      <Container>\n        <Title>Tranding today</Title>\n\n        {error && <h1>{error.message}</h1>}\n        {loading && <Loader />}\n        {<MoviesList movies={moviesTrand} />}\n      </Container>\n    </main>\n  );\n};\n\nexport default Home;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f8a6c1c08257b05a7c4692b093cbf34e';\n\nexport const getTrendingMovies = () => {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`).then(\n    res => {\n      if (res.status !== 200) {\n        return Promise.reject(new Error(`Oops, something went wrong...`));\n      } else return res.json();\n    }\n  );\n};\n\nexport const getMovieDetailes = movieId => {\n  return fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`).then(res => {\n    if (res.status !== 200) {\n      return Promise.reject(new Error(`Oops, something went wrong...`));\n    } else return res.json();\n  });\n};\n\nexport const getMovieCast = movieId => {\n  return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`).then(\n    res => {\n      if (res.status !== 200) {\n        return Promise.reject(new Error(`Oops, something went wrong...`));\n      } else return res.json();\n    }\n  );\n};\n\nexport const getMovieReviews = movieId => {\n  return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`).then(\n    res => {\n      if (res.status !== 200) {\n        return Promise.reject(new Error(`Oops, something went wrong...`));\n      } else return res.json();\n    }\n  );\n};\n\nexport const getSearchMovies = query => {\n  return fetch(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n  ).then(res => {\n    if (res.status !== 200) {\n      return Promise.reject(new Error(`Oops, something went wrong...`));\n    } else return res.json();\n  });\n};\n"],"names":["Container","children","className","css","MoviesList","movies","location","useLocation","map","title","id","to","state","from","Title","useState","loading","setLoading","moviesTrand","setMoviesTrand","error","setError","useEffect","getTrendingMovies","then","data","results","length","Promise","reject","Error","catch","finally","message","BASE_URL","API_KEY","fetch","res","status","json","getMovieDetailes","movieId","getMovieCast","getMovieReviews","getSearchMovies","query"],"sourceRoot":""}